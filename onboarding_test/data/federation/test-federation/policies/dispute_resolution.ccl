# Dispute Resolution Policy Template
# ----------------------------------
# This policy template governs the dispute resolution process

proposal "Dispute Resolution Policy" {
  # Define the scope of this policy
  scope "community/federation/governance/disputes"
  
  # Define the dispute resolution process
  process "dispute_resolution" {
    # Step 1: Filing a dispute
    step "file_dispute" {
      description "Community member files a formal dispute"
      
      # Required fields when filing a dispute
      required_fields {
        field "title" { type "string" }
        field "description" { type "string" }
        field "category" { 
          type "enum"
          values ["resource_allocation", "membership", "service_quality", "other"]
        }
        field "parties" { 
          type "array"
          items { type "did" }
        }
        field "evidence" {
          type "array"
          items { type "cid" }  # Content IDs of evidence documents
        }
      }
      
      # Access control for filing disputes
      access {
        role "cooperative_member" {
          permission "file" { grant true }
        }
      }
    }
    
    # Step 2: Initial review
    step "initial_review" {
      description "Community officials review the dispute for validity"
      
      # Required fields for the review
      required_fields {
        field "is_valid" { type "boolean" }
        field "review_notes" { type "string" }
        field "assigned_mediators" {
          type "array"
          items { type "did" }
          min_length 1
          max_length 3
        }
      }
      
      # Access control for reviewing disputes
      access {
        role "community_official" {
          permission "review" { grant true }
        }
      }
      
      # Transition rules
      transitions {
        transition "accept" {
          condition "is_valid == true"
          next_step "mediation"
        }
        transition "reject" {
          condition "is_valid == false"
          next_step "closed"
        }
      }
    }
    
    # Step 3: Mediation
    step "mediation" {
      description "Assigned mediators work with parties to resolve the dispute"
      
      # Required fields for mediation
      required_fields {
        field "mediation_notes" { type "string" }
        field "resolution_proposal" { type "string" }
        field "party_agreements" {
          type "array"
          items { 
            type "object"
            fields {
              field "party_did" { type "did" }
              field "agrees" { type "boolean" }
              field "comments" { type "string" }
            }
          }
        }
      }
      
      # Access control for mediation
      access {
        role "mediator" {
          permission "mediate" { grant true }
        }
        role "dispute_party" {
          permission "respond" { grant true }
        }
      }
      
      # Transition rules
      transitions {
        transition "resolved" {
          condition "all(party_agreements[*].agrees == true)"
          next_step "implementation"
        }
        transition "escalate" {
          condition "any(party_agreements[*].agrees == false)"
          next_step "voting"
        }
      }
    }
    
    # Step 4a: Implementation (if resolved in mediation)
    step "implementation" {
      description "Implement the agreed-upon resolution"
      
      # Required fields for implementation
      required_fields {
        field "implementation_plan" { type "string" }
        field "responsible_parties" {
          type "array"
          items { type "did" }
        }
        field "deadline" { type "timestamp" }
        field "verification_method" { type "string" }
      }
      
      # Access control for implementation
      access {
        role "community_official" {
          permission "implement" { grant true }
        }
        role "mediator" {
          permission "verify" { grant true }
        }
      }
      
      # Transition rules
      transitions {
        transition "complete" {
          condition "current_time > deadline"
          next_step "closed"
        }
      }
    }
    
    # Step 4b: Voting (if not resolved in mediation)
    step "voting" {
      description "Community officials vote on the dispute resolution"
      
      # Voting configuration
      voting {
        quorum_type "${QUORUM_TYPE}"  # From community configuration
        threshold ${THRESHOLD}  # From community configuration
        eligible_voters "community_official"
        voting_period_seconds ${VOTING_PERIOD}  # From community configuration
      }
      
      # Required fields for voting
      required_fields {
        field "resolution_options" {
          type "array"
          items { type "string" }
          min_length 2
        }
        field "votes" {
          type "array"
          items {
            type "object"
            fields {
              field "voter_did" { type "did" }
              field "option_index" { type "integer" }
              field "rationale" { type "string" }
            }
          }
        }
      }
      
      # Access control for voting
      access {
        role "community_official" {
          permission "vote" { grant true }
        }
      }
      
      # Transition rules
      transitions {
        transition "decided" {
          condition "votes.length >= threshold"
          next_step "enforcement"
        }
      }
    }
    
    # Step 5: Enforcement (after voting)
    step "enforcement" {
      description "Enforce the community-decided resolution"
      
      # Required fields for enforcement
      required_fields {
        field "enforcement_plan" { type "string" }
        field "enforcement_actions" {
          type "array"
          items { type "string" }
        }
        field "deadline" { type "timestamp" }
      }
      
      # Access control for enforcement
      access {
        role "community_official" {
          permission "enforce" { grant true }
        }
      }
      
      # Transition rules
      transitions {
        transition "complete" {
          condition "current_time > deadline"
          next_step "closed"
        }
      }
    }
    
    # Final step: Closed
    step "closed" {
      description "Dispute is closed and archived"
      
      # Required fields for closure
      required_fields {
        field "resolution_summary" { type "string" }
        field "closing_notes" { type "string" }
        field "archive_cid" { type "cid" }  # Content ID for the archived dispute record
      }
      
      # Access control for closing disputes
      access {
        role "community_official" {
          permission "close" { grant true }
        }
      }
    }
  }
  
  # Define metrics for dispute resolution
  metrics {
    metric "avg_resolution_time" {
      description "Average time to resolve disputes"
      unit "days"
      aggregation "average"
      measurement "time_between_steps" {
        from_step "file_dispute"
        to_step "closed"
      }
    }
    
    metric "resolution_success_rate" {
      description "Percentage of disputes resolved in mediation"
      unit "percentage"
      aggregation "count"
      measurement "step_transition" {
        from_step "mediation"
        to_step "implementation"
      }
    }
  }
  
  # Access control for modifying this policy
  access_control {
    # Only federation admins and community officials can modify dispute process
    role "federation_admin" {
      permission "modify_policy" {
        grant true
      }
    }
    
    role "community_official" {
      permission "modify_policy" {
        grant true
      }
    }
    
    # Read access for all cooperative members
    role "cooperative_member" {
      permission "view_policy" {
        grant true
      }
    }
  }
} 